// build req&res from proto file to server folder (go service)
// protoc name.proto --go_out=../server 

// build service from proto file to server folder
// protoc name.proto --go-grpc_out=../server

// do the same thing in client

syntax = "proto3";

package services;
option go_package="./services"; // ./services is package in Golang

service Calculator{ // create services
    rpc Hello(HelloRequest) returns(HelloResponse); // rpc name(request) returns(response)
    rpc Fibonacci(FibonacciRequest) returns(stream FibonacciResponse);
    rpc Average(stream AverageRequest) returns(AverageResponse);
    rpc Sum(stream SumRequest) returns(stream SumResponse);
}

message HelloRequest{ // what services want to get from clients
    string name = 1; // type name = tag;
}

message HelloResponse{ // whet services provide to client
    string result = 1;
}

message FibonacciRequest{
    uint32 n = 1;
}

message FibonacciResponse{
    uint32 result = 1;
}

message AverageRequest{
    double number = 1;
}

message AverageResponse{
    double result = 1;
}

message SumRequest{
    int32 number = 1;
}

message SumResponse{
    int32 result = 1;
}